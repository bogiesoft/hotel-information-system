<?php

/**
 * This is the model base class for the table "m_account".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MAccount".
 *
 * Columns in table "m_account" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property string $status
 * @property integer $level
 * @property string $type
 * @property integer $active
 *
 */
abstract class BaseMAccount extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'm_account';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MAccount|MAccounts', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, name, level', 'required'),
			array('level, active', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>20),
			array('name', 'length', 'max'=>100),
			array('status, type', 'length', 'max'=>1),
			array('status, type, active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, code, name, status, level, type, active', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'code' => Yii::t('app', 'Code'),
			'name' => Yii::t('app', 'Name'),
			'status' => Yii::t('app', 'Status'),
			'level' => Yii::t('app', 'Level'),
			'type' => Yii::t('app', 'Type'),
			'active' => Yii::t('app', 'Active'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('level', $this->level);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('active', $this->active);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}