<?php

/**
 * This is the model base class for the table "module".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Module".
 *
 * Columns in table "module" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $controller
 * @property string $action
 * @property string $icon
 * @property integer $order
 * @property integer $parent_id
 *
 */
abstract class BaseModule extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'module';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Module|Modules', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, controller, action, icon, order', 'required'),
			array('order, parent_id', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>30),
			array('controller, icon', 'length', 'max'=>20),
			array('action', 'length', 'max'=>1000),
			array('parent_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, controller, action, icon, order, parent_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'controller' => Yii::t('app', 'Controller'),
			'action' => Yii::t('app', 'Action'),
			'icon' => Yii::t('app', 'Icon'),
			'order' => Yii::t('app', 'Order'),
			'parent_id' => Yii::t('app', 'Parent'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('controller', $this->controller, true);
		$criteria->compare('action', $this->action, true);
		$criteria->compare('icon', $this->icon, true);
		$criteria->compare('order', $this->order);
		$criteria->compare('parent_id', $this->parent_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}