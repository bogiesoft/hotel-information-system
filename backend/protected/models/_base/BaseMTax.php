<?php

/**
 * This is the model base class for the table "m_tax".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MTax".
 *
 * Columns in table "m_tax" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $tax_type
 * @property string $code
 * @property string $tax_name
 * @property integer $tax_rate
 * @property integer $rate_pph
 * @property integer $tax_ppn_account_id
 * @property integer $tax_pph_account_id
 *
 */
abstract class BaseMTax extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'm_tax';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MTax|MTaxes', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('tax_type, code, tax_name, tax_rate, rate_pph, tax_ppn_account_id, tax_pph_account_id', 'required'),
			array('tax_type, tax_rate, rate_pph, tax_ppn_account_id, tax_pph_account_id', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>5),
			array('tax_name', 'length', 'max'=>50),
			array('id, tax_type, code, tax_name, tax_rate, rate_pph, tax_ppn_account_id, tax_pph_account_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'tax_type' => Yii::t('app', 'Tax Type'),
			'code' => Yii::t('app', 'Code'),
			'tax_name' => Yii::t('app', 'Tax Name'),
			'tax_rate' => Yii::t('app', 'Tax Rate'),
			'rate_pph' => Yii::t('app', 'Rate Pph'),
			'tax_ppn_account_id' => Yii::t('app', 'Tax Ppn Account'),
			'tax_pph_account_id' => Yii::t('app', 'Tax Pph Account'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('tax_type', $this->tax_type);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('tax_name', $this->tax_name, true);
		$criteria->compare('tax_rate', $this->tax_rate);
		$criteria->compare('rate_pph', $this->rate_pph);
		$criteria->compare('tax_ppn_account_id', $this->tax_ppn_account_id);
		$criteria->compare('tax_pph_account_id', $this->tax_pph_account_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}