<?php

/**
 * This is the model base class for the table "user_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserLog".
 *
 * Columns in table "user_log" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $time
 * @property integer $user_id
 * @property integer $user_level_id
 * @property string $path
 * @property string $data
 * @property integer $is_ajax
 *
 */
abstract class BaseUserLog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserLog|UserLogs', $n);
	}

	public static function representingColumn() {
		return 'time';
	}

	public function rules() {
		return array(
			array('time, user_id, user_level_id, path, data, is_ajax', 'required'),
			array('user_id, user_level_id, is_ajax', 'numerical', 'integerOnly'=>true),
			array('path', 'length', 'max'=>1000),
			array('id, time, user_id, user_level_id, path, data, is_ajax', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'time' => Yii::t('app', 'Time'),
			'user_id' => Yii::t('app', 'User'),
			'user_level_id' => Yii::t('app', 'User Level'),
			'path' => Yii::t('app', 'Path'),
			'data' => Yii::t('app', 'Data'),
			'is_ajax' => Yii::t('app', 'Is Ajax'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('time', $this->time, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('user_level_id', $this->user_level_id);
		$criteria->compare('path', $this->path, true);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('is_ajax', $this->is_ajax);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}