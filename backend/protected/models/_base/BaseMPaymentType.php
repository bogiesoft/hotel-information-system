<?php

/**
 * This is the model base class for the table "m_payment_type".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MPaymentType".
 *
 * Columns in table "m_payment_type" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $code
 * @property string $description
 * @property string $account_cc
 * @property string $bank_account
 * @property integer $bank_rate_admin
 *
 */
abstract class BaseMPaymentType extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'm_payment_type';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MPaymentType|MPaymentTypes', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, description, bank_rate_admin', 'required'),
			array('bank_rate_admin', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>5),
			array('description', 'length', 'max'=>50),
			array('account_cc, bank_account', 'length', 'max'=>20),
			array('account_cc, bank_account', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, code, description, account_cc, bank_account, bank_rate_admin', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'code' => Yii::t('app', 'Code'),
			'description' => Yii::t('app', 'Description'),
			'account_cc' => Yii::t('app', 'Account Cc'),
			'bank_account' => Yii::t('app', 'Bank Account'),
			'bank_rate_admin' => Yii::t('app', 'Bank Rate Admin'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('account_cc', $this->account_cc, true);
		$criteria->compare('bank_account', $this->bank_account, true);
		$criteria->compare('bank_rate_admin', $this->bank_rate_admin);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}