<?php

/**
 * This is the model base class for the table "m_giro_check".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MGiroCheck".
 *
 * Columns in table "m_giro_check" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $bank
 * @property integer $giro_or_check
 * @property integer $reference_id
 * @property integer $start_no
 * @property integer $limit_no
 *
 */
abstract class BaseMGiroCheck extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'm_giro_check';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MGiroCheck|MGiroChecks', $n);
	}

	public static function representingColumn() {
		return 'bank';
	}

	public function rules() {
		return array(
			array('bank, giro_or_check, reference_id, start_no, limit_no', 'required'),
			array('giro_or_check, reference_id, start_no, limit_no', 'numerical', 'integerOnly'=>true),
			array('bank', 'length', 'max'=>50),
			array('id, bank, giro_or_check, reference_id, start_no, limit_no', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bank' => Yii::t('app', 'Bank'),
			'giro_or_check' => Yii::t('app', 'Giro Or Check'),
			'reference_id' => Yii::t('app', 'Reference'),
			'start_no' => Yii::t('app', 'Start No'),
			'limit_no' => Yii::t('app', 'Limit No'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bank', $this->bank, true);
		$criteria->compare('giro_or_check', $this->giro_or_check);
		$criteria->compare('reference_id', $this->reference_id);
		$criteria->compare('start_no', $this->start_no);
		$criteria->compare('limit_no', $this->limit_no);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}